{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Description": "A template to launch phabricator with or withour snapshot.",

	"Parameters": {
		"KeyPairName": {
			"Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
			"Type": "AWS::EC2::KeyPair::KeyName"
		},

		"DbStorageQuota" : {
			"Description": "Disk size of MySql server.",
			"Default": "5",
			"Type": "Number"
		},
		"DbInstanceTyp" : {
			"Description" : "MySql server instance type",
			"Type" : "String",
			"Default" : "db.t2.micro",
			"AllowedValues": [
				"db.t2.micro",
				"db.t2.small",
				"db.t2.medium",
				"db.m3.medium",
				"db.m3.large",
				"db.m3.xlarge",
				"db.m3.2xlarge",
				"db.r3.large",
				"db.r3.xlarge",
				"db.r3.2xlarge",
				"db.r3.4xlarge",
				"db.r3.8xlarge"
			],
			"ConstraintDescription" : "must be a valid RDS instance type."
		},
		"DbUsername" : {
			"Description" : "MySql server username",
			"Type" : "String",
			"Default" : "sqladmin"
		},
		"DbPassword" : {
			"Description" : "MySql server password",
			"Type" : "String",
			"NoEcho" : "True"
		},
		"DbSnapshot" : {
			"Description" : "MySql server snapshot",
			"Type" : "String",
			"Default" : ""
		},
		"DbSubnetGroup" : {
			"Description" : "Subnet Group for hosting the MySql server. [private.resources.RdsSubnetGroup]",
			"Type" : "String"
		},
		"Hostname" : {
			"Description" : "Hostname to access phabricator.",
			"Type" : "String"
		},

		"RepoDiskSnapshot" : {
			"Description" : "Snapshot of repository disk",
			"Type" : "String",
			"Default" : ""
		},

		"WebInstanceTyp" : {
			"Description" : "Phabricator server instance type",
			"Type" : "String",
			"Default" : "t2.micro",
			"AllowedValues": [
				"t2.micro",
				"t2.small",
				"t2.medium",
				"m3.medium",
				"m3.large",
				"m3.xlarge",
				"m3.2xlarge"
			],
			"ConstraintDescription" : "must be a valid EC2 instance type."
		},
		"PhabTimezone" : {
			"Description": "Timezone of the web server.",
			"Default": "Australia/Sydney",
			"Type": "String"
		},
		"PhabMailAddress" : {
			"Description": "Phabricator mail address.",
			"Type": "String"
		},
		"UbuntuAmi": {
			"Description": "AMI to use. Note Ubuntu is prefered.",
			"Type": "AWS::EC2::Image::Id"
		},
		"Subnet1Id": {
			"Description" : "Subnet to run HA web cluster on. [nat-enabled.resources.Subnet1]",
			"Type": "AWS::EC2::Subnet::Id"
		},
		"VpcId": {
			"Description" : "VPCid associated with the subnets. [subnets.parameters.VpcId]",
			"Type": "AWS::EC2::VPC::Id"
		},

		"PhabricatorCommit": {
			"Description" : "Hash of the git commit to checkout.",
			"Type": "String",
			"Default": "04bf04d783db9019c746d7c787bdace8660afe62"
		},
		"LibphutilCommit": {
			"Description" : "Hash of the git commit to checkout.",
			"Type": "String",
			"Default": "672c0f7d5da9be6cda619428a9da3b91a670ea2f"
		},
		"ArcanistCommit": {
			"Description" : "Hash of the git commit to checkout.",
			"Type": "String",
			"Default": "64d03ff68bf2ff4ef99186472704df8aface9ef3"
		}
	},

	"Conditions" : {
		"HasDbSnapshot" : {"Fn::Not": [{"Fn::Equals": [
			{"Ref": "DbSnapshot"}, ""
		]}]},
		"HasRepoSnapshot" : {"Fn::Not": [{"Fn::Equals": [
			{"Ref": "RepoDiskSnapshot"}, ""
		]}]}
	},

	"Resources" : {

		"Database" : {
			"Type" : "AWS::RDS::DBInstance",
			"Properties" : {
				"VPCSecurityGroups" : [
					{"Ref": "DatabaseSg"}
				],
				"AllocatedStorage" : {"Ref": "DbStorageQuota"},
				"DBInstanceClass" : {"Ref": "DbInstanceTyp"},
				"DBParameterGroupName" : {"Ref": "DbParamGroup"},
				"Engine" : "MySQL",
				"MasterUsername" : {"Ref": "DbUsername"},
				"MasterUserPassword" : {"Ref": "DbPassword"},
				"DBSnapshotIdentifier" : {"Fn::If": [
					"HasDbSnapshot", {"Ref": "DbSnapshot"}, {"Ref" : "AWS::NoValue"}
				]},
				"DBSubnetGroupName" : {"Ref":"DbSubnetGroup"},
				"Tags" : [{"Key": "Name", "Value" : "Phabricator Database"}],
				"StorageType" : "gp2"
			},
			"DeletionPolicy" : "Snapshot"
		}, 
		"DbParamGroup": {
			"Type": "AWS::RDS::DBParameterGroup",
			"Properties": {
				"Description": "CloudFormation Sample Database Parameter Group", 
				"Family": "MySQL5.6", 
				"Parameters": {
					"autocommit": "1", 
					"general_log": "1", 
					"old_passwords": "0",
					"sql_mode": "STRICT_ALL_TABLES",
					"ft_min_word_len": "3",
					"max_allowed_packet": "100000000"
				}
			} 
		},

		"RepoDisk" : {
			"Type":"AWS::EC2::Volume",
			"Properties" : {
				"AvailabilityZone" : {"Fn::Select":["0", { "Fn::GetAZs": "" }]},
				"Size" : "5",
				"SnapshotId" : {"Fn::If":["HasRepoSnapshot",
					{"Ref":"RepoDiskSnapshot"},
					{"Ref":"AWS::NoValue"}
				]},
				"Tags" : [],
				"VolumeType" : "standard"
			},
			"DeletionPolicy" : "Snapshot"
		},

		"PhabricatorServiceAccount" : {
			"Type" : "AWS::IAM::User",
			"Properties" : {
				"Path" : "/phabricator/",
				"Policies" : [
				{
					"PolicyName" : "ses",
					"PolicyDocument" : {
						"Version": "2012-10-17",
						"Statement" : [
						{
							"Effect":"Allow",
							"Action":["ses:SendEmail", "ses:SendRawEmail"],
							"Resource":"*"
						}]
					}
				}]
			}
		},
		"PhabricatorServiceAccountKeySecret" : {
			"Type": "AWS::IAM::AccessKey",
			"Properties": {
				"Status": "Active",
				"UserName": {"Ref":"PhabricatorServiceAccount"}
			}
		},

		"PhabricatorWeb" : {
			"Type" : "AWS::EC2::Instance",
			"DependsOn" : "Database",
			"Metadata" : {
				"AWS::CloudFormation::Init" : {
					"configSets": {
						"config": [
							"download-files",
							"configure"
						]
					},
					"download-files" : {
						"sources": {
							"/usr/local/libphutil" : {"Fn::Join": ["", [
								"https://github.com/phacility/libphutil/tarball/", {"Ref": "LibphutilCommit"}
							]]},
							"/usr/local/arcanist" : {"Fn::Join": ["", [
								"https://github.com/phacility/arcanist/tarball/", {"Ref": "ArcanistCommit"}
							]]},
							"/usr/local/phabricator" : {"Fn::Join": ["", [
								"https://github.com/phacility/phabricator/tarball/", {"Ref": "PhabricatorCommit"}
							]]}
						}
					},
					"configure" : {
						"files" : {
							"/usr/local/mount-disk.sh" : {
								"content" : { "Fn::Join" : ["\n", [
									"#!/bin/bash",
									{"Fn::If":["HasRepoSnapshot","","mkfs -t ext3 /dev/xvdb"]},
									"sudo mkdir /mnt/xvdb",
									"sudo mount -t ext3 /dev/xvdb /mnt/xvdb"
								]]},
								"mode"   : "000755",
								"owner"  : "ubuntu",
								"group"  : "ubuntu"
							},
							"/usr/local/phabricator/bin/configure.sh" : {
								"content" : { "Fn::Join" : ["", [
									"#!/bin/bash\n",
									"./config set phd.user daemon-user\n",
									"./config set phabricator.timezone ", {"Ref": "PhabTimezone"}, "\n",
									"./config set diffusion.allow-http-auth true\n",
									"./config set pygments.enabled true\n",
									"./config set metamta.mail-adapter PhabricatorMailImplementationAmazonSESAdapter\n",
									"./config set metamta.default-address ", {"Ref": "PhabMailAddress"}, "\n",
									"./config set amazon-ses.access-key ", { "Ref": "PhabricatorServiceAccountKeySecret" }, "\n",
									"./config set amazon-ses.secret-key ", { "Fn::GetAtt": ["PhabricatorServiceAccountKeySecret", "SecretAccessKey"] }, "\n",
									"./config set repository.default-local-path /mnt/xvdb\n",
									"./config set mysql.user ", {"Ref":"DbUsername"}, "\n",
									"./config set mysql.pass ", {"Ref":"DbPassword"}, "\n",
									"./config set mysql.host ", {"Fn::GetAtt" : [ "Database", "Endpoint.Address"]},"\n",
									"./config set phabricator.base-uri \"", { "Ref": "Hostname" }, "\""
								]]},
								"mode"   : "000755",
								"owner"  : "ubuntu",
								"group"  : "ubuntu"
							},
							"/usr/local/phabricator/misc.sh" : {
								"content" : { "Fn::Join" : ["", [
									"#!/bin/bash\n",
									"pip install pygments\n",
									"ln -s /usr/lib/git-core/git-http-backend /usr/local/phabricator/support/bin/git-http-backend\n",
									"./bin/storage upgrade -f\n",
									"echo \"www-data ALL=(daemon-user) SETENV: NOPASSWD: /usr/lib/git-core/git-http-backend, /usr/bin/hg\" >> /etc/sudoers\n",
									"echo \"opcache.validate_timestamps=0\" >> /etc/php5/apache2/php.ini\n",
									"sed -i 's/post_max_size = .*/post_max_size = 50M/' /etc/php5/apache2/php.ini\n",
									"a2enmod rewrite\n",
									"a2enmod ssl\n",
									"a2dissite 000-default\n",
									"a2ensite phabricator\n",
									"service apache2 restart"
								]]},
								"mode"   : "000755",
								"owner"  : "ubuntu",
								"group"  : "ubuntu"
							},
							"/usr/local/phabricator/setup-phd.sh" : {
								"content" : { "Fn::Join" : ["\n", [
									"#!/bin/bash",
									"useradd daemon-user",
									"mkdir /home/daemon-user",
									"chown daemon-user /home/daemon-user",
									"chown daemon-user /mnt/xvdb/ -R",
									"sudo -iu daemon-user /usr/local/phabricator/bin/phd start"
								]]},
								"mode"   : "000755",
								"owner"  : "ubuntu",
								"group"  : "ubuntu"
							},
							"/etc/apache2/sites-available/phabricator.conf" : {
								"content" : { "Fn::Join" : ["", [
									"<VirtualHost *>\n",
										"DocumentRoot /usr/local/phabricator/webroot\n",
										"RewriteEngine on\n",
										"RewriteRule ^/rsrc/(.*)     -                       [L,QSA]\n",
										"RewriteRule ^/favicon.ico   -                       [L,QSA]\n",
										"RewriteRule ^(.*)$          /index.php?__path__=$1  [B,L,QSA]\n",
									"</VirtualHost>\n",
									"<Directory \"/usr/local/phabricator/webroot\">\n",
										"Require all granted\n",
									"</Directory>"
								]]},
								"mode"   : "000755",
								"owner"  : "ubuntu",
								"group"  : "ubuntu"
							}
						},
						"commands" : {
							"0-mount-disk" : {
								"command" : "./mount-disk.sh",
								"cwd" : "/usr/local"
							},
							"1-misc-configs" : {
								"command" : "./configure.sh",
								"cwd" : "/usr/local/phabricator/bin"
							},
							"3-dbupsert" : {
								"command" : "./misc.sh",
								"cwd" : "/usr/local/phabricator"
							},
							"4-start-phd" : {
								"command" : "./setup-phd.sh",
								"cwd" : "/usr/local/phabricator"
							},
							"10-signal" : {
								"command" : {"Fn::Join": ["",[
									"/usr/local/bin/cfn-signal -e 0 -r \"Webserver setup complete\" '", { "Ref" : "WaitHandle" }, "'"
								]]},
								"cwd" : "/usr/local/phabricator"
							}
						}
					}
				}
			},
			"Properties": {
				"InstanceType" : { "Ref" : "WebInstanceTyp" },
				"KeyName" : { "Ref" : "KeyPairName" },
				"ImageId" : { "Ref" : "UbuntuAmi" },
				"NetworkInterfaces" : [
				{
					"AssociatePublicIpAddress" : "false",
					"SubnetId" : { "Ref": "Subnet1Id" },
					"DeviceIndex" : "0",
					"GroupSet" : [
						{"Ref":"WebServerSg"}
					]
				}],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
					"apt-get update\n",
					"apt-get -y install python-setuptools python-pip\n",
					"apt-get -y install git mercurial subversion apache2 dpkg-dev\n",
					"apt-get -y install php5 php5-mysql php5-gd php5-dev php5-curl php-apc php5-cli php5-json\n",
					"easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
					"cfn-init --region ", { "Ref" : "AWS::Region" }," -s ", { "Ref" : "AWS::StackId" }, " -r PhabricatorWeb -c config"
				]]}},
				"BlockDeviceMappings" : [
					{
						"DeviceName" : "/dev/sda1",
						"Ebs" : { "VolumeSize" : "30", "VolumeType" : "gp2" }
					}
				],
				"Volumes" : [
					{"Device": "xvdb", "VolumeId" : {"Ref": "RepoDisk"}}
				],
				"Tags" : [{"Key": "Name", "Value" : "Phabricator"}]
			}
		},
		"WaitHandle" : {
			"Type" : "AWS::CloudFormation::WaitConditionHandle"
		},

		"WaitCondition" : {
			"Type" : "AWS::CloudFormation::WaitCondition",
			"DependsOn" : "PhabricatorWeb",
			"Properties" : {
				"Handle" : {"Ref" : "WaitHandle"},
				"Timeout" : "1200"
			}
		},

		"DatabaseSg" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Phabricator rds mysql server security group.",
				"VpcId" : { "Ref" : "VpcId"},
				"Tags": [{"Key": "Name", "Value" : "Phabricator Database"}]
			}
		},
		"WebServerSg" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Phabricator web server security group.",
				"SecurityGroupEgress" : [
					{ "IpProtocol" : "6" ,  "CidrIp": "0.0.0.0/0", "FromPort" : "80", "ToPort" : "80"  },
					{ "IpProtocol" : "6" ,  "CidrIp": "0.0.0.0/0", "FromPort" : "443", "ToPort" : "443"  }
				],
				"VpcId" : { "Ref" : "VpcId"},
				"Tags": [{"Key": "Name", "Value" : "Phabricator Web Server"}]
			}
		},
		"WebToDatabaseEgress" : {
			"Type": "AWS::EC2::SecurityGroupEgress",
			"Properties":{
				"IpProtocol": "tcp",
				"FromPort": "3306",
				"ToPort": "3306",
				"GroupId": { "Ref" : "WebServerSg" },
				"DestinationSecurityGroupId": { "Ref" : "DatabaseSg" }
			}
		},
		"WebToDatabaseIngress" : {
			"Type" : "AWS::EC2::SecurityGroupIngress",
			"Properties" : {
				"IpProtocol" : "tcp",
				"ToPort" : "3306",
				"FromPort" : "3306",
				"GroupId" : { "Ref" : "DatabaseSg" },
				"SourceSecurityGroupId" : { "Ref" : "WebServerSg" }
			}
		}
	},

	"Outputs" : {
	}
}
