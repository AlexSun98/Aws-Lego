{
	"AWSTemplateFormatVersion" : "2010-09-09",

	"Description" : "Acl rules required for AWS Directory Service.",

	"Parameters" : {

		"Subnet1Suffix" : {
			"Description" : "Subnet suffix to be concatenated with the VPC prefix. ",
			"Type" : "Number",
			"Default" : "18"
		},

		"Subnet2Suffix" : {
			"Description" : "Subnet suffix to be concatenated with the VPC prefix. ",
			"Type" : "Number",
			"Default" : "19"
		},

		"Subnet3Suffix" : {
			"Description" : "Subnet suffix to be concatenated with the VPC prefix. ",
			"Type" : "Number",
			"Default" : "20"
		},

		"VpcPrefix" : {
			"Description" : "Prefix for the VPC [vpc.parameters.VpcPrefix]",
			"Type" : "String"
		},

		"VpcId" : {
			"Description" : "VPC id [vpc.resources.Vpc]",
			"Type" : "String"
		},

		"Acl" : {
			"Description" : "VPC id [subnets.resources.Acl]",
			"Type" : "String"
		},

		"AzCount" : {
			"Description" : "Number of AZ. Third subnet will only be created if number is 3 [vpc.outputs.AzCount]",
			"Type" : "String"
		},

		"AvailableAzs" : {
			"Description" : "Comma-delimited list of three IP blocks",
			"Type" : "CommaDelimitedList",
			"Default" : ""
		}

	},

	"Conditions" : {
		"IsThreeAz" : { "Fn::Equals" : [{"Ref" : "AzCount"}, "3"]},
		"IsAzSupplied" : { "Fn::Not" : [{ "Fn::Equals" : [
			{"Fn::Select": ["0", {"Ref" : "AvailableAzs"}]}, ""
		]}]}
	},

	"Resources" : {

		"AclEntryInDataPortTcp" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "Acl" },
				"RuleNumber" : "2000",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : { "Fn::Join" : [ "", [
					{ "Ref" : "VpcPrefix" }, ".0.0/16"
				]]},
				"PortRange" : { "From" : "1024", "To" : "65535" }
			}
		},
		"AclEntryInDataPortUdp" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "Acl" },
				"RuleNumber" : "2001",
				"Protocol" : "17",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : { "Fn::Join" : [ "", [
					{ "Ref" : "VpcPrefix" }, ".0.0/16"
				]]},
				"PortRange" : { "From" : "1024", "To" : "65535" }
			}
		},
		"AclEntryInDnsPortTcp" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "Acl" },
				"RuleNumber" : "2002",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : { "Fn::Join" : [ "", [
					{ "Ref" : "VpcPrefix" }, ".0.0/16"
				]]},
				"PortRange" : { "From" : "53", "To" : "53" }
			}
		},
		"AclEntryInDnsPortUdp" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "Acl" },
				"RuleNumber" : "2003",
				"Protocol" : "17",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : { "Fn::Join" : [ "", [
					{ "Ref" : "VpcPrefix" }, ".0.0/16"
				]]},
				"PortRange" : { "From" : "53", "To" : "53" }
			}
		},
		"AclEntryInKerberosPortTcp" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "Acl" },
				"RuleNumber" : "2004",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : { "Fn::Join" : [ "", [
					{ "Ref" : "VpcPrefix" }, ".0.0/16"
				]]},
				"PortRange" : { "From" : "88", "To" : "88" }
			}
		},
		"AclEntryInKerberosPortUdp" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "Acl" },
				"RuleNumber" : "2005",
				"Protocol" : "17",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : { "Fn::Join" : [ "", [
					{ "Ref" : "VpcPrefix" }, ".0.0/16"
				]]},
				"PortRange" : { "From" : "88", "To" : "88" }
			}
		},





		"AclEntryOutDataPortTcp" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "Acl" },
				"RuleNumber" : "2000",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : { "Fn::Join" : [ "", [
					{ "Ref" : "VpcPrefix" }, ".0.0/16"
				]]},
				"PortRange" : { "From" : "1024", "To" : "65535" }
			}
		},
		"AclEntryOutDataPortUdp" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "Acl" },
				"RuleNumber" : "2001",
				"Protocol" : "17",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : { "Fn::Join" : [ "", [
					{ "Ref" : "VpcPrefix" }, ".0.0/16"
				]]},
				"PortRange" : { "From" : "1024", "To" : "65535" }
			}
		},
		"AclEntryOutDnsPortTcp" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "Acl" },
				"RuleNumber" : "2002",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : { "Fn::Join" : [ "", [
					{ "Ref" : "VpcPrefix" }, ".0.0/16"
				]]},
				"PortRange" : { "From" : "53", "To" : "53" }
			}
		},
		"AclEntryOutDnsPortUdp" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "Acl" },
				"RuleNumber" : "2003",
				"Protocol" : "17",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : { "Fn::Join" : [ "", [
					{ "Ref" : "VpcPrefix" }, ".0.0/16"
				]]},
				"PortRange" : { "From" : "53", "To" : "53" }
			}
		},
		"AclEntryOutKerberosPortTcp" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "Acl" },
				"RuleNumber" : "2004",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : { "Fn::Join" : [ "", [
					{ "Ref" : "VpcPrefix" }, ".0.0/16"
				]]},
				"PortRange" : { "From" : "88", "To" : "88" }
			}
		},
		"AclEntryOutKerberosPortUdp" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : { "Ref" : "Acl" },
				"RuleNumber" : "2005",
				"Protocol" : "17",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : { "Fn::Join" : [ "", [
					{ "Ref" : "VpcPrefix" }, ".0.0/16"
				]]},
				"PortRange" : { "From" : "88", "To" : "88" }
			}
		}
		

	}
}
